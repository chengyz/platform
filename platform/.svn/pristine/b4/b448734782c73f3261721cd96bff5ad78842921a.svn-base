package com.sctgz.platform.service.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import spark.annotation.Auto;

import com.mysql.jdbc.StringUtils;
import com.sctgz.platform.entity.MenuInfo;
import com.sctgz.platform.entity.MenuUnit;
import com.sctgz.platform.service.IMenuUnitService;

import dbengine.dao.EntityDao;
import dbengine.dao.SqlDao;

public class MenuUnitServiceImpl implements IMenuUnitService {
	@Auto(name=EntityDao.class)
	private EntityDao entitydao;
	
	@Auto(name=SqlDao.class)
	private SqlDao sqldao;
	
	@Override
	public boolean saveMenuUnit(String sourceId, boolean closeConn,
			List<MenuUnit> muList) {
		if(muList==null || muList.size()<1){
			return false;
		}
		try {
			return entitydao.saveBatch(sourceId, muList, closeConn);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return false;
	}

	@Override
	public boolean deleteMenuUnit(String sourceId, boolean closeConn,
			String menuUUID, String unitUUID) {
		StringBuilder sql = new StringBuilder();
		List<Object> params = new ArrayList<Object>();
		sql.append("delete from menu_unit where 1 = 1");
		if(menuUUID!=null && !"".equals(menuUUID) && !"null".equals(menuUUID)){
			sql.append(" and menuUUID = ?");
			params.add(menuUUID);
		}
		if(unitUUID!=null && !"".equals(unitUUID) && !"null".equals(unitUUID)){
			sql.append(" and unitUUID = ?");
			params.add(unitUUID);
		}
		return sqldao.executeSql(sourceId, sql.toString(), closeConn, params);
	}

	@Override
	public List<MenuInfo> findMenuByUnitUUID(String sourceId,
			boolean closeConn, String unitUUID) {
		if(unitUUID==null || "".equals(unitUUID) || "null".equals(unitUUID)){
			return null;
		}
		StringBuilder sql = new StringBuilder();
		List<Object> params = new ArrayList<Object>();
		sql.append("select * from menu_info m where 1 = 1");
		sql.append(" and menuUUID in(");
			sql.append("select menuUUID from menu_unit mu where 1 = 1");
			sql.append(" and mu.unitUUID = ?");
			params.add(unitUUID);
		sql.append(")");
		return (List<MenuInfo>)sqldao.findListBySql(sourceId, sql.toString(), MenuInfo.class, closeConn, params);
	}

	@Override
	public List<Map> findAllMenuItemForUnit(String sourceId, boolean closeConn,
			String unitUUID) {
		if (StringUtils.isNullOrEmpty(unitUUID)) {
			return null;
		}
		StringBuilder sql = new StringBuilder();
		sql.append("select ui.menuUUID,ui.menuName,au.menuUUID as selected from menu_info ui left join (select menuUUID from menu_unit ai where ai.unitUUID='"+unitUUID+"') au on ui.menuUUID=au.menuUUID order by menuCode");		
		List<Map> listMap = (List<Map>)sqldao.findMapListBysql(sourceId, sql.toString(), closeConn, null);
		if(listMap==null || listMap.size() < 1){
			return null;
		}
		for(Map map : listMap){
			if(map.get("selected") != null){
				map.put("selected", "selected");
			}else{
				map.put("selected", "");
			}
		}
		return listMap;
	}

}
